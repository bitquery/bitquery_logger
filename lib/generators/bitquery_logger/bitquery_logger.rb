BitqueryLogger.logger(type: :tcp, host: "127.0.0.1", port: 5170)

Rails.application.config.middleware.use ExceptionNotification::Rack,
                                        tcp: {}

ExceptionNotification.configure do |config|
  # Ignore additional exception types.
  # ActiveRecord::RecordNotFound, Mongoid::Errors::DocumentNotFound, AbstractController::ActionNotFound and ActionController::RoutingError are already added.
  # config.ignored_exceptions += %w{ActionView::TemplateError CustomError}

  # Adds a condition to decide when an exception must be ignored or not.
  # The ignore_if method can be invoked multiple times to add extra conditions.
  config.ignore_if do |exception, options|
    # !Rails.env.production?
  end

  # Ignore exceptions generated by crawlers
  # config.ignore_crawlers %w{Googlebot bingbot}

  # config.add_notifier :tcp,
  #                     lambda { |exception, options|
  #                       p exception
  #                       p options
  #                     }

  # config.add_notifier :tcp,
  #                     lambda { |exception, options|
  #                       BitqueryLogger.error LogStash::Event.new(message: exception,
  #                                                                stack_trace: exception.backtrace,
  #                                                                server_attributes: {},
  #                                                                env: options[:env].slice("env", "SCRIPT_NAME", "QUERY_STRING", "SERVER_PROTOCOL"),
  #                                                                context: {}) }

end

ExceptionNotifier::Rake.configure
